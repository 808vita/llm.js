diff --git a/run.c b/run.c
index afe695f..aecc3ce 100644
--- a/run.c
+++ b/run.c
@@ -520,6 +520,7 @@ int main(int argc, char *argv[]) {
     rng_seed = 0; // seed rng with time by default
     int steps = 256;          // number of steps to run for
     char *prompt = NULL;      // prompt string
+    char *tokenizer = NULL;      // prompt string
 
     // poor man's C argparse so we can override the defaults above from the command line
     if (argc >= 2) { checkpoint = argv[1]; } else { error_usage(); }
@@ -534,6 +535,7 @@ int main(int argc, char *argv[]) {
         else if (argv[i][1] == 's') { rng_seed = atoi(argv[i + 1]); }
         else if (argv[i][1] == 'n') { steps = atoi(argv[i + 1]); }
         else if (argv[i][1] == 'i') { prompt = argv[i + 1]; }
+        else if (argv[i][1] == 'v') { tokenizer = argv[i + 1]; }
         else { error_usage(); }
     }
     if(rng_seed == 0) { rng_seed =  (unsigned int)time(NULL);}
@@ -572,7 +574,7 @@ int main(int argc, char *argv[]) {
     float* vocab_scores = (float*)malloc(config.vocab_size * sizeof(float));
     unsigned int max_token_length;
     {
-        FILE *file = fopen("tokenizer.bin", "rb");
+        FILE *file = fopen(tokenizer, "rb");
         if (!file) { fprintf(stderr, "couldn't load tokenizer.bin\n"); return 1; }
         if (fread(&max_token_length, sizeof(int), 1, file) != 1) { fprintf(stderr, "failed read\n"); return 1; }
         int len;
